---
description: 
globs: 
alwaysApply: true
---
# IPTV Web KontrollÃ¼ Sistem - Teknik Kurallar

## 1. Proje TanÄ±mÄ±
Bu proje, web tabanlÄ± bir IPTV kontrol sistemidir. KullanÄ±cÄ±lar herhangi bir masaÃ¼stÃ¼ uygulama kurmadan, web arayÃ¼zÃ¼ Ã¼zerinden IPTV kanallarÄ±nÄ± yÃ¶netebilir. 

Proje, **Go** programlama dili ile geliÅŸtirilecek ve **MPV medya oynatÄ±cÄ±sÄ±** kullanarak IPTV akÄ±ÅŸlarÄ±nÄ± oynatacaktÄ±r. Sistem, **Xtream Codes API** ile kanal listelerini alabilecek ve favori kanallarÄ± **SQLite** veritabanÄ±nda saklayabilecektir. KullanÄ±cÄ±lar kanal deÄŸiÅŸtirme, durdurma ve oynatÄ±lan kanal bilgilerini gÃ¶rme gibi iÅŸlemleri web tabanlÄ± bir **React** UI aracÄ±lÄ±ÄŸÄ±yla gerÃ§ekleÅŸtirebilecektir.

---

## 2. Genel Mimari
- **Backend**: Go ile geliÅŸtirilecek, yerleÅŸik HTTP sunucusu kullanÄ±lacak.
- **Medya OynatÄ±cÄ±**: MPV JSON IPC ile kontrol edilecek.
- **Web UI**: React tabanlÄ± olacak ve Go tarafÄ±ndan saÄŸlanan REST API ile Ã§alÄ±ÅŸacaktÄ±r.
- **VeritabanÄ±**: SQLite, favori kanallarÄ± saklamak iÃ§in kullanÄ±lacak.
- **Kanal Listesi**: Xtream Codes API desteÄŸi olacak.
- **M3U DesteÄŸi**: M3U formatÄ± kolayca parse edilebilecek.

---

## 3. Teknik Kurallar

### 3.1 MPV Entegrasyonu
- MPV, Go tarafÄ±ndan **JSON IPC** ile kontrol edilecek.
- Kanal oynatma, deÄŸiÅŸtirme ve durdurma gibi komutlar MPVâ€™ye JSON RPC formatÄ±nda gÃ¶nderilecek.
- OynatÄ±lan kanal bilgisi Web UIâ€™ye API aracÄ±lÄ±ÄŸÄ±yla sunulacak.

**MPV JSON IPC KomutlarÄ±:**
```json
{"command": ["loadfile", "http://kanal-linki.m3u8", "replace"]}  // Kanal oynatma
{"command": ["get_property", "media-title"]}  // OynatÄ±lan kanal bilgisi alma
```

---

### 3.2 Web API (Go HTTP Server)
- API, **Go'nun net/http paketi** ile geliÅŸtirilecek.
- KullanÄ±lacak API endpoint'leri:
  - `GET /channels` â†’ Mevcut kanal listesini getirir.
  - `POST /play` â†’ Belirtilen kanalÄ± oynatÄ±r.
  - `POST /stop` â†’ OynatmayÄ± durdurur.
  - `POST /favorite` â†’ KanalÄ± favorilere ekler.
  - `GET /favorite` â†’ Favori kanallarÄ± getirir.

---

### 3.3 Xtream Codes DesteÄŸi
- KullanÄ±cÄ± bilgileri ile **Xtream Codes API**'ye baÄŸlanÄ±lacak.
- Kanal listesi ve kategorileri alÄ±nacak ve JSON formatÄ±na Ã§evrilecek.
- API isteÄŸi Ã¶rneÄŸi:
```go
xtreamURL := "http://xtreamcodes.com/get.php?username=USER&password=PASS&type=m3u_plus"
res, _ := http.Get(xtreamURL)
data, _ := io.ReadAll(res.Body)
m3u := string(data)
```

---

### 3.4 SQLite ile Favori Kanal Saklama
- Favori kanallar SQLite veritabanÄ±nda tutulacak.
- KullanÄ±lacak veritabanÄ± tablosu:
```sql
CREATE TABLE favorites (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    channel_name TEXT,
    channel_url TEXT
);
```
- Go ile favori kanal ekleme:
```go
db.Exec("INSERT INTO favorites (channel_name, channel_url) VALUES (?, ?)", name, url)
```

---

### 3.5 M3U Parser KullanÄ±mÄ±
- M3U dosyalarÄ±nÄ± parse etmek iÃ§in `github.com/grafov/m3u8` kÃ¼tÃ¼phanesi kullanÄ±lacak.
- Ã–rnek M3U parser kodu:
```go
playlist, _ := m3u8.DecodeFrom(strings.NewReader(m3uData), true)
for _, item := range playlist.(*m3u8.MediaPlaylist).Segments {
    fmt.Println("Kanal AdÄ±:", item.Title, "URL:", item.URI)
}
```

---

## 4. Sistem Gereksinimleri
- **Go (1.21+)**
- **MPV (JSON IPC etkinleÅŸtirilmeli)**
- **React (Web UI iÃ§in)**
- **SQLite (Favori kanallar iÃ§in)**
- **Xtream Codes API (Kanal verileri iÃ§in)**
- **M3U8 parser (Kolay kanal listesi iÅŸleme iÃ§in)**

---

Bu kurallar doÄŸrultusunda, hafif ve hÄ±zlÄ± bir IPTV kontrol sistemi geliÅŸtirilebilir. ğŸš€